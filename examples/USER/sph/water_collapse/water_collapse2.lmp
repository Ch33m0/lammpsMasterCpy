processors         * 1 1 # manually assign processors to spatial regions
atom_style         meso
dimension          2
newton             on
boundary           f f p
units              si
#read_data          data-3.initial

variable           h equal 0.03
variable           c equal 10.0 # soundspeed for Tait's EOS
variable           dt equal 0.1*${h}/${c} # upper limit of timestep based on CFL-like criterion
variable           nrun equal 15.0/${dt} # roughly estimate number of timesteps needed for 7.5 seconds
variable	   dx equal 0.00005

region             box block 0.00e-03 6.00e-03 0.00e-03 6.00e-03 -1.0e-6 1.0e-6 units box
create_box         3 box

region		   bc block EDGE EDGE EDGE EDGE EDGE EDGE side out units box
lattice 	   sq2 ${dx}
create_atoms	   3 region bc

region             water block 0.0e-03 1.00e-03 2.00e-03 4.00e-03 EDGE EDGE side in units box 
lattice            sq2 ${dx}
create_atoms       1 region water

region             water2 block 5.0e-03 6.00e-03 2.00e-03 4.0e-03 EDGE EDGE side in units box 
lattice            sq2 ${dx}
create_atoms       2 region water2


group              bc    type 3 # assign group name "bc" to boundary particles (type 3)
group              water type 1 # assign group name "water" to water particles (type 1)
group              water2  type 2 # assign group name "water2" to water2 particles (type 2)
#group              water  type 2 # assign group name "water2" to water2 particles (type 2)

mass		  1 0.2
mass		  2 0.2
mass		  3 0.1

set                type 1 meso/e 1000
set                type 2 meso/e 1200
set		   type 3 meso/e 41670


# use hybrid pairstyle which does density summation with cutoff ${h} every timestep (1)
pair_style         hybrid/overlay sph/rhosum 1 sph/taitwater sph/heatconduction
pair_coeff         * * sph/taitwater 1000.0 ${c} 1.0 ${h} # use target density of 1000, soundspeed ${c} for Tait's EOS
pair_coeff         1 1 sph/rhosum ${h}
pair_coeff         2 2 sph/rhosum ${h}
pair_coeff   	   1 2 sph/rhosum ${h}

pair_coeff	   * * sph/heatconduction 1.47e-3 ${h}


fix                gfix water gravity -9.81 vector 0 1 0 # add gravity. This fix also computes potential energy of mass in gravity field.
fix                gfix water2 gravity -9.81 vector 0 1 0
fix                2d_fix all enforce2d


variable   tempe 	atom  ((c_e_peratom-1000)/(0.2*4117)+300)
variable   tempera	atom  ((c_e_peratom-500)/(0.1*4117)+300)

compute            rho_peratom all meso/rho/atom
compute            e_peratom all meso/e/atom
compute            esph all reduce sum c_e_peratom
compute            ke all ke
variable           etot equal c_esph+c_ke+f_gfix




# adjust nevery | min. allowed dt | max. allowed dt | max. travel distance per dt # // ${dt} ~= CFL criterion 0.1*h/c
fix                dtfix all dt/reset 1               NULL              ${dt}             0.0005 units box # use a variable timestep

# time-integrate position, velocities, internal energy and density of water particles
fix                integrate_water_fix water meso
fix 	  	   integrate_water_fix water2 meso

# time-integrate only internal energy and density of boundary particles
fix                integrate_bc_fix bc meso/stationary
dump               dump_id all custom 100 dumpCustomBoxes.lammpstrj id type xs ys zs mass c_rho_peratom c_e_peratom fx fy v_tempe v_tempera 
dump_modify        dump_id first yes
thermo             10
thermo_style       custom step ke c_esph v_etot f_gfix press time f_dtfix
thermo_modify      norm no
thermo_modify 	   lost ignore flush yes

neigh_modify       every 5 delay 0 check no
variable           skin equal 0.3*${h}
neighbor           ${skin} bin # set Verlet list skin distance
# viscosity	   4P 1.856e-11 4209 0.04527 -3.376e-5
viscosity 	   4PM 2  #multiple viscosities, specify 2 types
viscosity	   type 1 1.856e-11 4209 0.04527 -3.376e-5
viscosity	   type 2 7.856e-10 4209 0.04527 -3.376e-5
#viscosity	   type 2 0.00201 1614 0.00618 -3.376e-5


run                ${nrun}
